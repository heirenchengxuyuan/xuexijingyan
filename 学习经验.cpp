//学习态度上做到这几点:
//	1.多看.  可以多刷些论坛(csdn,github，程序园,博客园)，帖子，包括QQ学习群等平台，多接触一些干货文章
//	2.多做   多做一些开发实操，小项目，积累动手经验，甚至有必要锻炼纸笔写代码，学完一个知识点就可以做相应阶段的小题目，堆砌到一定程度就做小项目
//	3.多想   学了的东西一定要好好巩固到位，而且最好具有举一反三的开拓思维.要学会自己去创造或者做有自己想法的东西.以及要学会做到"用思考代替发问",出现问题，遇到bug，自己不先去想办法，而是直接问人的话，这样子是学不到东西的
//	
//	
//	1.不要看到别人的回复第一句话就说：给个代码吧！你应该想想为什么。当你自己想出来再参考别人的提示，你就知道自己和别人思路的差异。
//	
//	2.初学者请不要看太多太多的书那会误人子弟的，先找本系统的学，很多人用了很久都是只对部分功能熟悉而已，不系统还是不够的。
//	
//	3.看帮助,不要因为很难而自己是初学者所以就不看；帮助永远是最好的参考手册，虽然帮助的文字有时候很难看懂，总觉得不够直观。
//	
//	4.不要被对象、属性、方法等词汇所迷惑；最根本的是先了解最基础知识。
//	
//	5.不要放过任何一个看上去很简单的小问题--他们往往并不那么简单，或者可以引伸出很多知识点；不会举一反三你就永远学不会。
//	
//	6.知道一点东西，并不能说明你会了编程，编程是需要经验积累的。
//	
//	7.学编程并不难，JAVA、C++、PYTHON等等也不过如此--难的是长期坚持实践和不遗余力的博览群书；
//	
//	8.看再多的书是学不全编程的，要多实践
//	
//	9.把时髦的技术挂在嘴边，还不如把过时的技术记在心里；
//	
//	10.学习编程最好的方法之一就是多练习；
//	
//	11.在任何时刻都不要认为自己手中的书已经足够了；
//	
//	12.看得懂的书，请仔细看；看不懂的书，请硬着头皮看；
//	
//	13.别指望看第一遍书就能记住和掌握什么――请看第二遍、第三遍；
//	
//	14.请把书上的例子亲手到电脑上实践，即使配套光盘中有源文件；
//	
//	15.把在书中看到的有意义的例子扩充；并将其切实的运用到自己的工作中；
//	
//	16.不要漏掉书中任何一个练习――请全部做完并记录下思路；
//	
//	17.当你用脚本到一半却发现自己用的方法很拙劣时，请不要马上停手；请尽快将余下的部分粗略的完成以保证这个代码的完整性，然后分析自己的错误并重新编写和工作。
//	
//	18.别心急，写代码确实不容易；水平是在不断的实践中完善和发展的；
//	
//	19.每学到一个编程难点的时候，尝试着对别人讲解这个知识点并让他理解----你能讲清楚才说明你真的理解了；
//	
//	20.记录下在和别人交流时发现的自己忽视或不理解的知识点；
//	
//	21.保存好你做过的所有的源文件----那是你最好的积累之一；
//	
//	22.对于网络，还是希望大家能多利用一下，很多问题不是非要到论坛来问的，首先你要学会自己找答案，比如google、百度都是很好的搜索引擎，你只要输入关键字就能找到很多相关资料，别老是等待别人给你希望，看的出你平时一定也很懒！
//	
//	23，到一个论坛，你学会去看以前的帖子，不要什么都不看就发帖子问，也许你的问题早就有人问过了，你再问，别人已经不想再重复了，做为初学者，谁也不希望自己的帖子没人回的。
//	
//	24，虽然不是打击初学者，但是这句话还是要说：论坛和群，就是大家讨论的地方，如果你总期望有高手总无偿指点你，除非他是你亲戚！！讨论者，起码是水平相当的才有讨论的说法，如果水平真差距太远了，连基本操作都需要别人给解答，谁还跟你讨论呢。

